apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.chaquo.python'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { inputStream ->
        localProperties.load(inputStream)
    }
}

android {
    namespace 'com.upidea.astrolumina'
    compileSdk 34

    defaultConfig {
        applicationId "com.upidea.astrolumina"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Chaquopy için gerekli: hangi ABI’leri paketleyeceğiz?
             ndk {
                     abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        python {
            pip {
                install "skyfield"
                install "pytz"
                install "geopy"
                install "timezonefinder"
            }
        }
        // Get API key from local.properties
        buildConfigField "String", "GEMINI_API_KEY", "\"${localProperties.getProperty('GEMINI_API_KEY', '')}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // AndroidX
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-android-compiler:2.44'

    // Room
    implementation 'androidx.room:room-runtime:2.5.1'
    kapt 'androidx.room:room-compiler:2.5.1'
    implementation 'androidx.room:room-ktx:2.5.1'

    // Lifecycle & ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'

    // Activity KTX - viewModels() delegate için gerekli
    implementation 'androidx.activity:activity-ktx:1.8.2'

    // Fragment KTX - viewModels() delegate için gerekli (eğer fragment kullanıyorsanız)
    implementation 'androidx.fragment:fragment-ktx:1.6.2'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

    // Networking (Retrofit + Gson) — eğer GeminiService Retrofit kullanıyorsa
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    // Chaquopy
    implementation 'com.chaquo.python.runtime:chaquopy:16.1.0'

    implementation 'com.tbuonomo:dotsindicator:4.3'

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


}
